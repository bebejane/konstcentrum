#import "./fragment/MemberFragment.gql"
#import "./fragment/MemberLightFragment.gql"
#import "./fragment/MemberNewsLightFragment.gql"
#import "./fragment/MediaGalleryFragment.gql"

query AllMembers($regionId: ItemId, $first: IntType = 10, $skip: IntType = 0) {
	members: allMembers(filter: { region: { eq: $regionId } }, first: $first, skip: $skip) {
		...MemberLightFragment
	}
	pagination: _allMembersMeta(filter: { region: { eq: $regionId } }) {
		count
	}
}
query AllMembersList($regionId: ItemId, $first: IntType = 10, $skip: IntType = 0) {
	members: allMembers(filter: { region: { eq: $regionId } }, first: $first, skip: $skip) {
		fullName
		firstName
		lastName
		image {
			id
		}
		active
		slug
		region {
			...RegionFragment
		}
	}
	pagination: _allMembersMeta(filter: { region: { eq: $regionId } }) {
		count
	}
}

query AllMembersWithPortfolio($regionId: ItemId, $first: IntType = 10, $skip: IntType = 0) {
	members: allMembers(
		filter: { image: { exists: true }, active: { eq: true }, region: { eq: $regionId } }
		orderBy: _createdAt_DESC
		first: $first
		skip: $skip
	) {
		...MemberLightFragment
	}
	pagination: _allMembersMeta(
		filter: { image: { exists: true }, active: { eq: true }, region: { eq: $regionId } }
	) {
		count
	}
}

query AllMembersCities {
	cities: allMembers(
		filter: { image: { exists: true }, active: { eq: true }, city: { isBlank: false } }
	) {
		name: city
	}
}

query Member($email: String!) {
	member(filter: { email: { matches: { pattern: $email, caseSensitive: false } } }) {
		...MemberFragment
	}
}
query MemberBySlug($slug: String!) {
	member(filter: { slug: { eq: $slug } }) {
		...MemberFragment
	}
}

query MemberByPasswordToken($token: String!) {
	member(filter: { resettoken: { eq: $token } }) {
		...MemberFragment
	}
}

query AllMemberCategories {
	memberCategories: allMemberCategories {
		id
		categoryType
	}
}

query ApplyForMembership {
	apply {
		id
		title
		intro
		image {
			...ImageFragment
		}
		content {
			value
			blocks {
				... on ButtonRecord {
					__typename
					id
					text
					url
				}
			}
		}
	}
}

query MemberNews($slug: String!) {
	memberNews(filter: { slug: { eq: $slug } }) {
		...MemberNewsFragment
	}
}
query MemberNewsById($id: ItemId!) {
	memberNews(filter: { id: { eq: $id } }) {
		...MemberNewsFragment
	}
}

query AllMemberNews($first: IntType = 10, $skip: IntType = 0, $regionId: ItemId) {
	memberNews: allMemberNews(
		filter: { region: { eq: $regionId } }
		orderBy: [createdAt_DESC]
		first: $first
		skip: $skip
	) {
		...MemberNewsLightFragment
	}
	pagination: _allMemberNewsMeta(filter: { region: { eq: $regionId } }) {
		count
	}
}

query AllPastAndFutureMemberNews(
	$regionId: ItemId
	$categoryId: ItemId
	$date: Date
	$first: IntType
	$skip: IntType
) {
	memberNews: allMemberNews(
		filter: {
			region: { eq: $regionId }
			category: { eq: $categoryId }
			OR: [
				{ date: { gt: $date }, dateEnd: { gt: $date, exists: true } }
				{ dateEnd: { lt: $date, exists: true } }
				{ date: { gt: $date } }
			]
		}
		orderBy: [date_DESC]
		first: $first
		skip: $skip
	) {
		...MemberNewsLightFragment
	}
	pagination: _allMemberNewsMeta(
		filter: {
			region: { eq: $regionId }
			category: { eq: $categoryId }
			OR: [
				{ date: { gt: $date }, dateEnd: { gt: $date, exists: true } }
				{ dateEnd: { lt: $date, exists: true } }
				{ date: { gt: $date } }
			]
		}
	) {
		count
	}
}

query AllPresentMemberNews(
	$first: IntType = 100
	$skip: IntType = 0
	$regionId: ItemId
	$date: Date
) {
	presentMemberNews: allMemberNews(
		filter: {
			region: { eq: $regionId }
			date: { lte: $date }
			dateEnd: { gte: $date, exists: true }
		}
		orderBy: [date_DESC]
		first: $first
		skip: $skip
	) {
		...MemberNewsLightFragment
	}
	pagination: _allMemberNewsMeta(
		filter: {
			region: { eq: $regionId }
			date: { lte: $date }
			dateEnd: { gte: $date, exists: true }
		}
	) {
		count
	}
}

query MemberImages($email: String!) {
	member(filter: { email: { matches: { pattern: $email, caseSensitive: false } } }) {
		content {
			... on ImageRecord {
				image {
					...MediaGalleryFragment
				}
				thumb: image {
					...MediaGalleryFragment
				}
			}
		}
	}
	uploads: allUploads(filter: { tags: { anyIn: [$email] } }) {
		...MediaGalleryFragment
	}
	uploadsThumbs: allUploads(filter: { tags: { anyIn: [$email] } }) {
		...MediaGalleryFragment
	}
}

query AllMemberNewsCategories {
	memberNewsCategories: allMemberNewsCategories {
		id
		category
	}
}

query LatestMemberNews($first: IntType = 2, $skip: IntType = 0, $regionId: ItemId) {
	memberNews: allMemberNews(
		filter: { region: { eq: $regionId } }
		orderBy: [createdAt_DESC]
		first: $first
		skip: $skip
	) {
		...MemberNewsLightFragment
	}
}

query RelatedMembers(
	$first: IntType = 6
	$skip: IntType = 0
	$regionId: ItemId
	$memberId: ItemId
) {
	members: allMembers(
		filter: {
			image: { exists: true }
			active: { eq: true }
			region: { eq: $regionId }
			id: { neq: $memberId }
		}
		first: $first
		skip: $skip
	) {
		...MemberLightFragment
	}
}

query MembersList {
	membersList {
		intro(markdown: false)
	}
}
