#import "./fragment/MemberFragment.gql"
#import "./fragment/MemberLightFragment.gql"
#import "./fragment/MemberNewsLightFragment.gql"

query AllMembers {
	members: allMembers {
		...MemberLightFragment
	}
}
query AllMembersWithPortfolio($regionId: ItemId) {
	members: allMembers(filter: { image: { exists: true }, region: { eq: $regionId } }) {
		...MemberLightFragment
	}
}

query AllMembersCities {
	cities: allMembers(filter: { image: { exists: true }, city: { isBlank: false } }) {
		name: city
	}
}

query Member($email: String!) {
	member(filter: { email: { eq: $email } }) {
		...MemberFragment
	}
}
query MemberBySlug($slug: String!) {
	member(filter: { slug: { eq: $slug } }) {
		...MemberFragment
	}
}

query MemberByPasswordToken($token: String!) {
	member(filter: { resettoken: { eq: $token } }) {
		id
		email
		firstName
		lastName
	}
}

query AllMemberCategories {
	memberCategories: allMemberCategories {
		id
		categoryType
	}
}

query MemberNews($slug: String!) {
	memberNews(filter: { slug: { eq: $slug } }) {
		...MemberNewsFragment
	}
}

query ApplyForMembership {
	apply {
		id
		title
		content {
			value
			blocks
		}
	}
}

query AllMemberNews {
	memberNews: allMemberNews {
		...MemberNewsLightFragment
	}
}

query LatestMemberNews($first: IntType = 2, $skip: IntType = 0, $regionId: ItemId) {
	memberNews: allMemberNews(
		filter: { region: { eq: $regionId } }
		orderBy: [createdAt_DESC]
		first: $first
		skip: $skip
	) {
		...MemberNewsLightFragment
	}
}

query RelatedMembers(
	$first: IntType = 6
	$skip: IntType = 0
	$regionId: ItemId
	$memberId: ItemId
) {
	members: allMembers(
		filter: { image: { exists: true }, region: { eq: $regionId }, id: { neq: $memberId } }
		first: $first
		skip: $skip
	) {
		...MemberLightFragment
	}
}

query SearchMembers(
	$first: IntType = 10
	$skip: IntType = 0
	$memberCategoryId: ItemId
	$regionId: ItemId #$city: String
) {
	members: allMembers(
		filter: {
			image: { exists: true }
			region: { eq: $regionId }
			memberCategory: { anyIn: [$memberCategoryId] }
			#city: { eq: $city }
		}
		first: $first
		skip: $skip
	) {
		...MemberLightFragment
	}
}

query SearchMembersFree($first: IntType = 10, $skip: IntType = 0, $query: String!) {
	members: allMembers(
		filter: {
			image: { exists: true }
			OR: [
				{ firstName: { matches: { pattern: $query, caseSensitive: false } } }
				{ lastName: { matches: { pattern: $query, caseSensitive: false } } }
			]
		}
		first: $first
		skip: $skip
	) {
		...MemberLightFragment
	}
}
